CREATE DATABASE IF NOT EXISTS TICKETMASTER_DB;

CREATE OR REPLACE TABLE TICKETMASTER_DATA (
    EVENT_ID STRING,
    EVENT_NAME STRING,
    EVENT_URL STRING,
    EVENT_GENRE STRING,
    EVENT_SUBGENRE STRING,
    MIN_PRICE DOUBLE,
    MAX_PRICE DOUBLE,
    TICKET_LIMIT BIGINT,
    VENUE_ID STRING,
    VENUE_NAME STRING,
    VENUE_CITY STRING,
    VENUE_ADDRESS STRING,
    VENUE_STATE STRING,
    VENUE_LATITUDE STRING,
    VENUE_LONGITUDE STRING,
    VENUE_MARKET STRING,
    MAIN_ATTRACTION STRING,
    EVENT_DATETIME STRING,
    PRICE_RANGE DOUBLE
);

CREATE OR REPLACE SCHEMA EXTERNAL_STAGES;

CREATE OR REPLACE SCHEMA FILE_FORMATS;

CREATE OR REPLACE STORAGE INTEGRATION s3_init
    TYPE = EXTERNAL_STAGE
    STORAGE_PROVIDER = S3
    ENABLED = TRUE
    STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::975050109362:role/tm-snowflake-s3-connection'
    STORAGE_ALLOWED_LOCATIONS = ('s3://ticketmaster-data/post-etl-data/')
    COMMENT = 'creating connection to s3 bucket'

DESC INTEGRATION s3_init;
    
CREATE OR REPLACE FILE FORMAT TICKETMASTER_DB.FILE_FORMATS.csv_file_format
    type = csv
    record_delimiter = '\n'
    field_delimiter = ','
    FIELD_OPTIONALLY_ENCLOSED_BY = '"'
    skip_header = 1
    null_if = ('NULL', 'null')
    empty_field_as_null = TRUE;

CREATE OR REPLACE STAGE TICKETMASTER_DB.EXTERNAL_STAGES.ticketmaster_stage
    URL = 's3://ticketmaster-data/post-etl-data/'
    STORAGE_INTEGRATION = s3_init
    FILE_FORMAT = TICKETMASTER_DB.FILE_FORMATS.csv_file_format

LIST @TICKETMASTER_DB.EXTERNAL_STAGES.ticketmaster_stage;

CREATE OR REPLACE SCHEMA TICKETMASTER_DB.pipes;

CREATE OR REPLACE PIPE TICKETMASTER_DB.pipes.tm_pipe
AUTO_INGEST=TRUE
AS 
COPY INTO TICKETMASTER_DATA
FROM @TICKETMASTER_DB.EXTERNAL_STAGES.ticketmaster_stage;

DESC PIPE TICKETMASTER_DB.pipes.tm_pipe

SELECT *
FROM TICKETMASTER_DATA;

SELECT EXTRACT(month FROM TO_TIMESTAMP(event_datetime))
FROM TICKETMASTER_DATA;

SELECT AVG(price_range)
FROM TICKETMASter_DATA
WHERE price_range != 0;

SELECT DISTINCT event_name, COUNT(event_name) AS TOTAL_EVENTS
FROM TICKETMASTER_DATA
GROUP BY event_name;
